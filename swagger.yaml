openapi: 3.0.0
info:
  version: "1.0.0"
  title: Collecto API
  description: API de autenticación y gestión de sesión para la plataforma Collecto
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/collecto-0bb/CollectoAPI/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/collecto/Collecto/1.0.0
  - url: http://localhost:3000
    description: Servidor de desarrollo local
paths:
  /api/auth/register:
    post:
      tags:
        - Autenticación y gestión de sesión
      summary: Registra un nuevo usuario en la plataforma
      description: Crea un nuevo usuario con los datos proporcionados, maneja la carga de una imagen de avatar, y envía un correo de verificación a través de una cola RabbitMQ
      operationId: register
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nombre de usuario
                  example: "john_doe"
                email:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                  example: "john.doe@example.com"
                password:
                  type: string
                  description: Contraseña del usuario
                  example: "securePassword123"
                firstName:
                  type: string
                  description: Primer nombre
                  example: "John"
                lastName:
                  type: string
                  description: Apellido
                  example: "Doe"
                dateOfBirth:
                  type: string
                  format: date
                  description: Fecha de nacimiento del usuario
                  example: "1990-01-01"
                phone:
                  type: string
                  description: Teléfono de contacto
                  example: "+1234567890"
                location:
                  type: string
                  description: Ubicación del usuario
                  example: "Madrid, España"
                avatar:
                  type: string
                  format: binary
                  description: Imagen de perfil (archivo)
                avatarUrl:
                  type: string
                  description: URL del avatar (se ignora si se sube una imagen)
                  example: "/uploads/avatars/john_doe_avatar.jpg"
                bio:
                  type: string
                  description: Biografía del usuario
                  example: "Desarrollador web con pasión por la tecnología."
                direccionId:
                  type: string
                  description: ID de la dirección asociada al usuario
                  example: "abc123"
      responses:
        '201':
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuario registrado. Verifica tu correo para activarlo."
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "507f1f77bcf86cd799439011"
                      username:
                        type: string
                        example: "john_doe"
                      email:
                        type: string
                        example: "john.doe@example.com"
                      avatarUrl:
                        type: string
                        example: "https://res.cloudinary.com/tu_cuenta/image/upload/v123/avatar.jpg"
        '400':
          description: El usuario ya existe
        '500':
          description: Error interno en el servidor

  /api/auth/verify-email/{token}:
    get:
      tags:
        - Autenticación y gestión de sesión
      summary: Verifica el correo electrónico del usuario
      description: Verifica el token JWT de verificación de correo electrónico enviado durante el registro y activa el campo `emailVerified` en la cuenta del usuario
      operationId: verifyRegisterEmail
      parameters:
        - name: token
          in: path
          required: true
          description: Token de verificación enviado por correo electrónico
          schema:
            type: string
      responses:
        '200':
          description: Correo verificado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Usuario registrado"
        '400':
          description: Token inválido o expirado
        '404':
          description: Usuario no encontrado

  /api/auth/login:
    post:
      tags:
        - Autenticación y gestión de sesión
      summary: Inicia sesión con un usuario existente
      description: Realiza el login de un usuario utilizando el nombre de usuario y la contraseña. Verifica que el correo esté activado antes de permitir el acceso.
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Nombre de usuario
                password:
                  type: string
                  description: Contraseña del usuario
                rememberMe:
                  type: boolean
                  description: Opción para recordar la sesión (extiende el token a 30 días)
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login exitoso"
                  token:
                    type: string
                    description: JWT token generado para la sesión
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      username:
                        type: string
                      email:
                        type: string
        '400':
          description: Contraseña incorrecta o email no verificado
        '404':
          description: Usuario no encontrado

  /api/auth/logout:
    post:
      tags:
        - Autenticación y gestión de sesión
      summary: Cierra la sesión de un usuario
      description: Elimina la cookie del token de autenticación y cierra la sesión del usuario
      operationId: logout
      responses:
        '200':
          description: Sesión cerrada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Sesión cerrada correctamente"

  /api/auth/recover:
    post:
      tags:
        - Autenticación y gestión de sesión
      summary: Inicia la recuperación de contraseña para un usuario
      description: Envía un correo con un enlace para recuperar la contraseña, encolado mediante RabbitMQ
      operationId: recoverPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
      responses:
        '200':
          description: Correo de recuperación enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Correo de recuperación enviado"
        '404':
          description: Usuario no encontrado

  /api/auth/recover/{token}:
    post:
      tags:
        - Autenticación y gestión de sesión
      summary: Verifica el token de recuperación de contraseña
      description: Verifica el token JWT recibido para recuperación de contraseña
      operationId: verifyRecoverToken
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Token de recuperación válido
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token de recuperación válido"
                  userId:
                    type: string
        '400':
          description: Token inválido o expirado

  /api/auth/reset/{token}:
    post:
      tags:
        - Autenticación y gestión de sesión
      summary: Restablece la contraseña de un usuario
      description: Permite restablecer la contraseña de un usuario utilizando un token JWT válido. Envía un correo de confirmación mediante RabbitMQ.
      operationId: resetPassword
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                  description: Nueva contraseña del usuario
      responses:
        '200':
          description: Contraseña restablecida correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contraseña actualizada y correo de confirmación enviado"
        '404':
          description: Usuario no encontrado
        '400':
          description: Token inválido


































  /api/users/me:
    get:
      tags:
        - Gestiones del usuario
      summary: Obtener los datos del usuario autenticado
      security:
        - cookieAuth: []
      responses:
        200:
          description: Datos del usuario actual

    put:
      tags:
        - Gestiones del usuario
      summary: Editar perfil del usuario autenticado
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
                phone:
                  type: string
                location:
                  type: string
                bio:
                  type: string
                avatarUrl:
                  type: string
                gender:
                  type: string
                email:
                  type: string
      responses:
        200:
          description: Perfil actualizado correctamente

    delete:
      tags:
      - Gestiones del usuario
      summary: Eliminar cuenta del usuario autenticado
      security:
        - cookieAuth: []
      parameters:
        - in: header
          name: X-User-Password
          schema:
            type: string
          required: true
          description: Contraseña del usuario para confirmar la eliminación
      responses:
        200:
          description: Cuenta y datos eliminados correctamente
        400:
          description: No puedes eliminar tu cuenta si tienes anuncios activos
        401:
          description: Contraseña incorrecta
        404:
          description: Usuario no encontrado
        500:
          description: Error al eliminar el perfil









  /api/users/me/check-email:
    post:
      tags:
        - Gestiones del usuario
      summary: Verificar si un email ya está registrado
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          description: Resultado de la verificación del email

  /api/users/me/password:
    patch:
      tags:
        - Gestiones del usuario
      summary: Actualizar contraseña del usuario autenticado
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        200:
          description: Contraseña actualizada correctamente





















  /api/adverts:
    get:
      summary: Obtener todos los anuncios disponibles
      tags:
        - Anuncios
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Número de página para la paginación
        - in: query
          name: limit
          schema:
            type: integer
          description: Cantidad de resultados por página
        - in: query
          name: sortBy
          schema:
            type: string
            enum: [price, createdAt, title]
          description: Campo por el que ordenar
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
          description: Dirección de orden
      responses:
        '200':
          description: Lista de anuncios obtenida correctamente
    post:
      tags:
        - Gestiones del usuario
      summary: Crear un nuevo anuncio
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - price
                - transaction
                - status
                - product_type
                - universe
                - condition
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                transaction:
                  type: string
                status:
                  type: string
                product_type:
                  type: string
                universe:
                  type: string
                condition:
                  type: string
                collectionref:
                  type: string
                brand:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                imageUrls:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Anuncio creado correctamente
        '400':
          description: Faltan campos obligatorios o datos inválidos
        '500':
          description: Error al crear el anuncio

  /api/adverts/{id}:
    put:
      tags:
        - Gestiones del usuario
      summary: Editar un anuncio propio
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                price:
                  type: number
                transaction:
                  type: string
                status:
                  type: string
                product_type:
                  type: string
                universe:
                  type: string
                condition:
                  type: string
                collectionref:
                  type: string
                brand:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
                imageUrls:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Anuncio actualizado correctamente
        '403':
          description: No tienes permiso para editar este anuncio
        '404':
          description: Anuncio no encontrado
        '500':
          description: Error al actualizar el anuncio

    delete:
      tags:
        - Gestiones del usuario
      summary: Eliminar un anuncio propio
      security:
        - cookieAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Anuncio eliminado correctamente
        '403':
          description: No tienes permiso para eliminar este anuncio
        '404':
          description: Anuncio no encontrado
        '500':
          description: Error al borrar el anuncio

  /api/adverts/search:
    get:
      summary: Buscar y filtrar anuncios
      tags:
        - Anuncios
      parameters:
        - in: query
          name: searchTerm
          schema:
            type: string
          description: Palabras clave para búsqueda general
        - in: query
          name: title
          schema:
            type: string
        - in: query
          name: priceMin
          schema:
            type: number
        - in: query
          name: priceMax
          schema:
            type: number
        - in: query
          name: tags
          schema:
            type: string
        - in: query
          name: transaction
          schema:
            type: string
        - in: query
          name: collectionref
          schema:
            type: string
        - in: query
          name: createdAtMin
          schema:
            type: string
            format: date-time
        - in: query
          name: createdAtMax
          schema:
            type: string
            format: date-time
        - in: query
          name: brand
          schema:
            type: string
        - in: query
          name: product_type
          schema:
            type: string
        - in: query
          name: universe
          schema:
            type: string
        - in: query
          name: condition
          schema:
            type: string
        - in: query
          name: slug
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: sortBy
          schema:
            type: string
        - in: query
          name: sortOrder
          schema:
            type: string
      responses:
        '200':
          description: Resultados de búsqueda obtenidos correctamente

  /api/adverts/{slug}:
    get:
      summary: Obtener detalle de un anuncio por slug
      tags:
        - Anuncios
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalle del anuncio

  /api/adverts/{id}/id:
    get:
      summary: Obtener un anuncio por ID
      tags:
        - Anuncios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalle del anuncio

  /api/users/me/adverts:
    get:
      summary: Ver anuncios del usuario autenticado
      tags:
        - Anuncios
      responses:
        '200':
          description: Lista de anuncios del propio usuario

  /api/users/{username}/listings:
    get:
      summary: Ver anuncios de un usuario específico
      tags:
        - Anuncios
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de anuncios del usuario

  /api/adverts/og/{slug}:
    get:
      summary: Obtener metadatos OG para un anuncio
      tags:
        - Anuncios
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        '200':
          description: HTML con metadatos OG

  /api/adverts/{id}/status:
    patch:
      summary: Cambiar estado y visibilidad del anuncio
      tags:
        - Anuncios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: Estado actualizado correctamente

  /api/adverts/{id}/picture:
    post:
      summary: Subir imágenes de un anuncio
      tags:
        - Anuncios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Imágenes subidas correctamente
    get:
      summary: Ver imágenes de un anuncio
      tags:
        - Anuncios
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de imágenes del anuncio




















  /api/catalogs:
    get:
      tags:
        - Catálogos
      summary: Obtener todos los catálogos principales
      description: Devuelve un objeto con los catálogos principales utilizados para crear anuncios (estados, transacciones, universos, condiciones, etc.)
      responses:
        '200':
          description: Catálogos cargados correctamente

  /api/universes:
    get:
      tags:
        - Catálogos
      summary: Obtener universos
      description: Devuelve una lista de universos ordenados por prioridad
      parameters:
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
          required: false
          description: Orden de la lista (ascendente o descendente)
      responses:
        '200':
          description: Lista de universos
        '404':
          description: No hay universos disponibles

  /api/brands:
    get:
      tags:
        - Catálogos
      summary: Obtener marcas
      description: Devuelve una lista de marcas ordenadas por prioridad
      parameters:
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
          required: false
          description: Orden de la lista (ascendente o descendente)
      responses:
        '200':
          description: Lista de marcas
        '404':
          description: No hay marcas disponibles

    post:
      tags:
        - Catálogos - Administración
      summary: Crear nueva marca
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, logoUrl]
              properties:
                name:
                  type: string
                logoUrl:
                  type: string
                slug:
                  type: string
      responses:
        '201':
          description: Marca creada correctamente
        '400':
          description: Ya existe una marca con ese slug

  /api/conditions:
    get:
      tags:
        - Catálogos
      summary: Obtener condiciones
      description: Devuelve una lista de condiciones disponibles
      responses:
        '200':
          description: Lista de condiciones
        '404':
          description: No hay condiciones disponibles

    post:
      tags:
        - Catálogos - Administración
      summary: Crear nueva condición
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [value]
              properties:
                value:
                  type: string
      responses:
        '201':
          description: Condición creada correctamente
        '400':
          description: Ya existe una condición con ese valor

  /api/transactions:
    get:
      tags:
        - Catálogos
      summary: Obtener tipos de transacción
      description: Devuelve una lista de tipos de transacción disponibles
      responses:
        '200':
          description: Lista de transacciones
        '404':
          description: No hay transacciones disponibles

    post:
      tags:
        - Catálogos - Administración
      summary: Crear nueva transacción
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [transaction]
              properties:
                transaction:
                  type: string
                description:
                  type: string
                slug:
                  type: string
      responses:
        '201':
          description: Transacción creada correctamente
        '400':
          description: Ya existe una transacción con ese tipo

  /api/statuses:
    get:
      tags:
        - Catálogos
      summary: Obtener estados de anuncio
      description: Devuelve una lista de estados posibles para los anuncios, ordenados por prioridad
      parameters:
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
          required: false
          description: Orden de la lista (ascendente o descendente)
      responses:
        '200':
          description: Lista de estados
        '404':
          description: No hay estados disponibles

    post:
      tags:
        - Catálogos - Administración
      summary: Crear nuevo estado
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [code, label, context]
              properties:
                code:
                  type: string
                label:
                  type: string
                context:
                  type: string
                order:
                  type: integer
                active:
                  type: boolean
      responses:
        '201':
          description: Estado creado correctamente
        '400':
          description: Ya existe un estado con ese código

  /api/product-types:
    get:
      tags:
        - Catálogos
      summary: Obtener tipos de producto
      description: Devuelve una lista de tipos de producto disponibles
      parameters:
        - name: sortOrder
          in: query
          schema:
            type: string
            enum: [asc, desc]
          required: false
          description: Orden de la lista (ascendente o descendente)
      responses:
        '200':
          description: Lista de tipos de producto
        '404':
          description: No hay tipos de producto disponibles

    post:
      tags:
        - Catálogos - Administración
      summary: Crear nuevo tipo de producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, slug]
              properties:
                name:
                  type: string
                slug:
                  type: string
                description:
                  type: string
                order:
                  type: integer
      responses:
        '201':
          description: Tipo de producto creado correctamente
        '400':
          description: Ya existe un tipo de producto con ese slug









  /api/universes/universes:
    post:
      tags:
        - Catálogos - Administración
      summary: Crear nuevo universo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, logoUrl, slug]
              properties:
                name:
                  type: string
                logoUrl:
                  type: string
                slug:
                  type: string
      responses:
        '201':
          description: Universo creado correctamente
        '400':
          description: Ya existe un universo con ese slug

  /api/collectionrefs:
    post:
      tags:
        - Catálogos - Administración
      summary: Crear nueva colección
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                slug:
                  type: string
      responses:
        '201':
          description: Colección creada correctamente
        '400':
          description: Ya existe una colección con ese slug


  /api/universes/universes/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar un universo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                logoUrl:
                  type: string
                slug:
                  type: string
      responses:
        '200':
          description: Universo actualizado correctamente
        '404':
          description: Universo no encontrado

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar un universo
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Universo eliminado
        '404':
          description: Universo no encontrado



  /api/brands/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar una marca
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                logoUrl:
                  type: string
                slug:
                  type: string
      responses:
        '200':
          description: Marca actualizada correctamente
        '404':
          description: Marca no encontrada

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar una marca
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Marca eliminada
        '404':
          description: Marca no encontrada



  /api/collectionrefs/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar una colección
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
      responses:
        '200':
          description: Colección actualizada correctamente
        '404':
          description: Colección no encontrada

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar una colección
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Colección eliminada
        '404':
          description: Colección no encontrada



  /api/conditions/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar una condición
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
      responses:
        '200':
          description: Condición actualizada correctamente
        '404':
          description: Condición no encontrada

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar una condición
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Condición eliminada
        '404':
          description: Condición no encontrada



  /api/transactions/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar una transacción
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: string
                description:
                  type: string
                slug:
                  type: string
      responses:
        '200':
          description: Transacción actualizada correctamente
        '404':
          description: Transacción no encontrada

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar una transacción
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Transacción eliminada
        '404':
          description: Transacción no encontrada



  /api/statuses/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar un estado
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                context:
                  type: string
                order:
                  type: integer
                active:
                  type: boolean
      responses:
        '200':
          description: Estado actualizado correctamente
        '404':
          description: Estado no encontrado

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar un estado
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Estado eliminado
        '404':
          description: Estado no encontrado



  /api/product-types/{id}:
    put:
      tags:
        - Catálogos - Administración
      summary: Actualizar un tipo de producto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
                description:
                  type: string
                order:
                  type: integer
      responses:
        '200':
          description: Tipo de producto actualizado correctamente
        '404':
          description: Tipo de producto no encontrado

    delete:
      tags:
        - Catálogos - Administración
      summary: Eliminar un tipo de producto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tipo de producto eliminado
        '404':
          description: Tipo de producto no encontrado



















  /api/users/me/favorites:
    get:
      tags:
        - Favoritos
      summary: Obtener "Mis anuncios favoritos"
      description: Obtiene los anuncios favoritos del usuario autenticado. Incluye el total de favoritos.
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Lista de anuncios favoritos del usuario, incluyendo el total de favoritos
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  adverts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Advert'
        '404':
          description: Usuario no encontrado o sin favoritos

  /api/users/me/favorites/{listingId}:
    post:
      tags:
        - Favoritos
      summary: Agregar un anuncio a favoritos
      description: Permite agregar un anuncio a la lista de favoritos del usuario
      security:
        - cookieAuth: []
      parameters:
        - name: listingId
          in: path
          required: true
          description: ID del anuncio a agregar a favoritos
          schema:
            type: string
      responses:
        '201':
          description: Anuncio agregado a favoritos
        '404':
          description: Anuncio no encontrado
        '400':
          description: El anuncio ya está en tus favoritos

    delete:
      tags:
        - Favoritos
      summary: Eliminar un anuncio de favoritos
      description: Permite eliminar un anuncio de la lista de favoritos del usuario
      security:
        - cookieAuth: []
      parameters:
        - name: listingId
          in: path
          required: true
          description: ID del anuncio a eliminar de favoritos
          schema:
            type: string
      responses:
        '200':
          description: Anuncio eliminado de favoritos
        '404':
          description: Anuncio no encontrado
        '400':
          description: El anuncio no está en tus favoritos






















  /api/notifications/user:
    get:
      tags:
        - Notificaciones
      summary: Obtener "Mis notificaciones"
      description: Devuelve todas las notificaciones del usuario autenticado
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Lista de notificaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '404':
          description: No tienes notificaciones

  /api/notifications/{id}/read:
    patch:
      tags:
        - Notificaciones
      summary: Marcar notificación como leída
      description: Permite marcar una notificación como leída
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la notificación a marcar como leída
          schema:
            type: string
      responses:
        '200':
          description: Notificación marcada como leída
        '404':
          description: Notificación no encontrada o no te pertenece
  
  /api/notifications/types:
    get:
      tags:
        - Notificaciones
      summary: Ver tipos de notificación disponibles
      description: Devuelve todos los tipos de notificación existentes, ordenados por prioridad
      responses:
        '200':
          description: Lista de tipos de notificación
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationType'
        '404':
          description: No hay tipos de notificación disponibles

    post:
      tags:
        - Notificaciones
      summary: Crear nuevo tipo de notificación (solo admin)
      description: Crea un nuevo tipo de notificación personalizado
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                template:
                  type: string
                icon:
                  type: string
                order:
                  type: integer
      responses:
        '201':
          description: Tipo de notificación creado
        '400':
          description: Ya existe un tipo de notificación con ese código

  /api/notifications/types/{id}:
    put:
      tags:
        - Notificaciones
      summary: Actualizar tipo de notificación (solo admin)
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                template:
                  type: string
                icon:
                  type: string
                order:
                  type: integer
      responses:
        '200':
          description: Tipo de notificación actualizado correctamente
        '404':
          description: Tipo de notificación no encontrado

    delete:
      tags:
        - Notificaciones
      summary: Eliminar tipo de notificación (solo admin)
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tipo de notificación eliminado correctamente
        '404':
          description: Tipo de notificación no encontrado





















  /api/users/me/chat/{listingId}:
    post:
      tags:
        - Chat
      summary: Crear un chat relacionado con un anuncio
      description: Crea un nuevo chat entre el usuario autenticado y el vendedor del anuncio
      operationId: createChat
      parameters:
        - name: listingId
          in: path
          required: true
          description: ID del anuncio relacionado con el chat
          schema:
            type: string
      responses:
        '201':
          description: Chat creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Chat creado exitosamente"
                  chatId:
                    type: string
        '404':
          description: Anuncio no encontrado
        '400':
          description: No puedes chatear contigo mismo

  /api/users/me/chat/{chatId}:
    get:
      tags:
        - Chat
      summary: Ver los mensajes de un chat
      description: Muestra todos los mensajes de un chat específico en el que el usuario autenticado está involucrado
      operationId: getChatMessages
      parameters:
        - name: chatId
          in: path
          required: true
          description: ID del chat del cual se obtendrán los mensajes
          schema:
            type: string
      responses:
        '200':
          description: Lista de mensajes del chat
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sender:
                      type: string
                    content:
                      type: string
                    createdAt:
                      type: string
                      format: date-time
        '404':
          description: Chat no encontrado
        '403':
          description: No tienes permiso para ver este chat

    post:
      tags:
        - Chat
      summary: Enviar un mensaje en un chat
      description: Permite al usuario autenticado enviar un mensaje en un chat existente
      operationId: sendMessageToChat
      parameters:
        - name: chatId
          in: path
          required: true
          description: ID del chat en el que se enviará el mensaje
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Contenido del mensaje
      responses:
        '201':
          description: Mensaje enviado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Mensaje enviado"
        '404':
          description: Chat no encontrado
        '403':
          description: No tienes permiso para enviar mensajes en este chat

  /api/users/me/chat:
    get:
      tags:
        - Chat
      summary: Obtener todas las conversaciones del usuario
      description: Devuelve todas las conversaciones en las que el usuario autenticado está involucrado
      operationId: getUserChats
      responses:
        '200':
          description: Lista de conversaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    chatId:
                      type: string
                    advertTitle:
                      type: string
                    participants:
                      type: array
                      items:
                        type: string
                    lastMessage:
                      type: string
                    lastMessageTimestamp:
                      type: string
                      format: date-time
        '404':
          description: No tienes conversaciones





























  /api/orders:
    post:
      tags:
        - Ordenes
      summary: Crear una nueva orden
      description: Permite crear una nueva orden de compra o venta
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                advertId:
                  type: string
                  description: ID del anuncio que se quiere comprar o vender
      responses:
        '201':
          description: Orden creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Orden creada"
                  order:
                    $ref: '#/components/schemas/Order'
        '400':
          description: El anuncio no está disponible para compra
        '404':
          description: Anuncio no encontrado

  /api/orders/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: ID de la orden
        schema:
          type: string
    get:
      tags:
        - Ordenes
      summary: Obtener detalles de una orden
      description: Permite obtener los detalles de una orden mediante su ID
      operationId: getOrderDetails
      responses:
        '200':
          description: Detalles de la orden
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    $ref: '#/components/schemas/Order'
        '404':
          description: Orden no encontrada

    delete:
      tags:
        - Ordenes
      summary: Cancelar una orden
      description: Permite cancelar una orden existente
      operationId: cancelOrder
      responses:
        '200':
          description: Orden cancelada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Orden cancelada"
                  order:
                    $ref: '#/components/schemas/Order'
        '400':
          description: Solo se pueden cancelar las órdenes en estado "pending"
        '404':
          description: Orden no encontrada
        '403':
          description: No tienes permiso para cancelar esta orden

  /api/orders/{id}/status:
    patch:
      tags:
        - Ordenes
      summary: Actualizar estado de la orden
      description: Permite actualizar el estado de una orden (ej. pendiente, pagado, enviado)
      operationId: updateOrderStatus
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la orden
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ['pending', 'paid', 'shipped', 'delivered', 'cancelled']
                  description: Nuevo estado de la orden
      responses:
        '200':
          description: Estado de la orden actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Estado de la orden actualizado"
                  order:
                    $ref: '#/components/schemas/Order'
        '400':
          description: Estado inválido
        '404':
          description: Orden no encontrada
        '403':
          description: No tienes permiso para actualizar el estado de esta orden

  /api/orders/me:
    get:
      tags:
        - Ordenes
      summary: Obtener todas las órdenes del usuario autenticado
      description: Devuelve todas las órdenes de compra y venta asociadas al usuario autenticado. Se puede filtrar por `orderId`, y se aplica paginación con `page` y `limit`.
      operationId: getAllUserOrders
      parameters:
        - name: orderId
          in: query
          required: false
          description: Filtra las órdenes por un ID específico
          schema:
            type: string
        - name: page
          in: query
          required: false
          description: Número de página para paginación (por defecto 1)
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          required: false
          description: Número de órdenes por página (por defecto 10)
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Lista de órdenes del usuario, incluyendo el total de órdenes
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Total de órdenes del usuario
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
        '404':
          description: No tienes órdenes
        '500':
          description: Error interno en el servidor


  /api/payments:
    post:
      tags:
        - Pagos
      summary: Iniciar un pago
      description: Permite iniciar un pago para una orden pendiente
      operationId: initiatePayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: ID de la orden a pagar
                paymentMethodID:
                  type: string
                  description: ID del método de pago
                amount:
                  type: number
                  format: double
                  description: Monto del pago
                currency:
                  type: string
                  description: Moneda del pago
      responses:
        '201':
          description: Pago iniciado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Compra realizada"
                  pago:
                    $ref: '#/components/schemas/Payment'
        '400':
          description: Orden no disponible para pago o método de pago no disponible
        '404':
          description: Orden no encontrada

  /api/payments/{id}:
    get:
      tags:
        - Pagos
      summary: Obtener detalles de un pago
      description: Permite obtener los detalles de un pago mediante su ID
      operationId: getPaymentDetails
      parameters:
        - name: id
          in: path
          required: true
          description: ID del pago
          schema:
            type: string
      responses:
        '200':
          description: Detalles del pago
          content:
            application/json:
              schema:
                type: object
                properties:
                  pago:
                    $ref: '#/components/schemas/Payment'
        '404':
          description: Pago no encontrado

  /api/payments/status/{paymentId}:
    get:
      tags:
        - Pagos
      summary: Consultar el estado de un pago
      description: Permite consultar el estado de un pago mediante su ID
      operationId: getPaymentStatus
      parameters:
        - name: paymentId
          in: path
          required: true
          description: ID del pago a consultar
          schema:
            type: string
      responses:
        '200':
          description: Estado del pago
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Estado del pago
                  message:
                    type: string
                    example: "Pago procesado correctamente"
        '404':
          description: Pago no encontrado

  /api/payments/my-purchases:
    get:
      tags:
        - Pagos
      summary: Ver "Mis compras"
      description: Devuelve los pagos asociados a las compras realizadas por el usuario autenticado
      operationId: getMyPurchases
      responses:
        '200':
          description: Lista de compras realizadas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '404':
          description: No tienes compras realizadas

  /api/payments/my-sales:
    get:
      tags:
        - Pagos
      summary: Ver "Mis ventas"
      description: Devuelve los pagos asociados a las ventas realizadas por el usuario autenticado
      operationId: getMySales
      responses:
        '200':
          description: Lista de ventas realizadas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
        '404':
          description: No has realizado ventas

  /api/payments/confirmation:
    post:
      tags:
        - Pagos
      summary: Confirmar un pago
      description: Confirma el pago realizado a través de la pasarela de pagos (ej. MercadoPago)
      operationId: confirmPayment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentId:
                  type: string
                  description: ID del pago a confirmar
                transactionId:
                  type: string
                  description: ID de la transacción asociada al pago
                paymentStatus:
                  type: string
                  enum: ['succeeded', 'failed', 'cancelled']
                  description: Estado final del pago
      responses:
        '200':
          description: Pago confirmado y procesado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Pago confirmado y procesado correctamente"
        '404':
          description: Pago no encontrado
        '400':
          description: El transactionId no coincide o el estado del pago no fue proporcionado
















  /api/shipments:
    post:
      tags:
        - Envíos y logística
      summary: Crear un nuevo envío
      description: Permite crear un envío para una orden pagada
      operationId: createShipment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  description: ID de la orden asociada al envío
                shippingProviderId:
                  type: string
                  description: ID del proveedor de envío
                trackingCode:
                  type: string
                  description: Código de seguimiento del envío
                estimatedDate:
                  type: string
                  format: date
                  description: Fecha estimada de entrega
      responses:
        '201':
          description: Envío creado exitosamente
        '404':
          description: Orden o proveedor de envío no encontrado
        '400':
          description: La orden no ha sido pagada

  /api/shipments/me/{id}:
    get:
      tags:
        - Envíos y logística
      summary: Obtener detalles del envío
      description: Permite obtener los detalles del envío asociado a un ID de orden
      operationId: getShipmentDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles del envío
        '404':
          description: Envío no encontrado

  /api/shipments/me/{id}/status:
    patch:
      tags:
        - Envíos y logística
      summary: Actualizar estado del envío
      description: Actualiza el estado del envío
      operationId: updateShipmentStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: ["en tránsito", "entregado", "pendiente", "cancelado"]
      responses:
        '200':
          description: Estado actualizado
        '400':
          description: Estado inválido
        '404':
          description: Envío no encontrado

  /api/shipments/history:
    post:
      tags:
        - Envíos y logística
      summary: Agregar actualización al historial del envío
      description: Agrega una entrada al historial del envío
      operationId: addToShipmentHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shipmentId:
                  type: string
                status:
                  type: string
                details:
                  type: string
      responses:
        '201':
          description: Historial actualizado
        '404':
          description: Envío no encontrado

  /api/shipments/me/{id}/history:
    get:
      tags:
        - Envíos y logística
      summary: Ver historial del envío
      description: Devuelve el historial del envío
      operationId: getShipmentHistory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Historial del envío
        '404':
          description: Envío no encontrado

  /api/trackings/update:
    post:
      tags:
        - Envíos y logística
      summary: Crear o actualizar seguimiento de envío
      description: Consulta a Correos y guarda el tracking
      operationId: createOrUpdateShipmentTracking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                providerName:
                  type: string
                trackingCode:
                  type: string
                currentStatus:
                  type: string
                estimatedDate:
                  type: string
                  format: date
                deliveredAt:
                  type: string
                  format: date
                history:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: Seguimiento actualizado correctamente
        '404':
          description: Pedido no encontrado

  /api/trackings/{orderId}:
    get:
      tags:
        - Envíos y logística
      summary: Obtener seguimiento de un envío
      description: Devuelve los datos de seguimiento de un pedido
      operationId: getShipmentTracking
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Seguimiento del envío
        '404':
          description: Pedido o seguimiento no encontrado

  /api/shipping-methods:
    get:
      tags:
        - Envíos y logística
      summary: Obtener métodos de envío
      description: Lista todos los métodos de envío activos
      operationId: getAllShippingMethods
      responses:
        '200':
          description: Lista de métodos de envío
        '404':
          description: No hay métodos disponibles

    post:
      tags:
        - Envíos y logística
      summary: Crear método de envío (admin)
      operationId: createShippingMethod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                order:
                  type: integer
                active:
                  type: boolean
      responses:
        '201':
          description: Método creado correctamente
        '400':
          description: Método duplicado

  /api/shipping-methods/{id}:
    put:
      tags:
        - Envíos y logística
      summary: Actualizar método de envío (admin)
      operationId: updateShippingMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                order:
                  type: integer
                active:
                  type: boolean
      responses:
        '200':
          description: Método actualizado
        '404':
          description: Método no encontrado

    delete:
      tags:
        - Envíos y logística
      summary: Eliminar método de envío (admin)
      operationId: deleteShippingMethod
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Método eliminado
        '404':
          description: Método no encontrado

  /api/shipping-providers:
    get:
      tags:
        - Envíos y logística
      summary: Obtener proveedores de envío
      description: Lista todos los proveedores activos
      operationId: getAllShippingProviders
      responses:
        '200':
          description: Lista de proveedores
        '404':
          description: No hay proveedores disponibles

    post:
      tags:
        - Envíos y logística
      summary: Crear proveedor de envío (admin)
      operationId: createShippingProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                trackingUrl:
                  type: string
                apiIntegration:
                  type: boolean
      responses:
        '201':
          description: Proveedor creado correctamente
        '400':
          description: Código duplicado

  /api/shipping-providers/{id}:
    put:
      tags:
        - Envíos y logística
      summary: Actualizar proveedor de envío (admin)
      operationId: updateShippingProvider
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                label:
                  type: string
                trackingUrl:
                  type: string
                apiIntegration:
                  type: boolean
      responses:
        '200':
          description: Proveedor actualizado
        '404':
          description: Proveedor no encontrado

    delete:
      tags:
        - Envíos y logística
      summary: Eliminar proveedor de envío (admin)
      operationId: deleteShippingProvider
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Proveedor eliminado
        '404':
          description: Proveedor no encontrado









  /api/menus:
    get:
      tags:
        - Menús
      summary: Obtener todos los menús
      description: Devuelve la lista completa de menús configurados
      operationId: getMenus
      responses:
        '200':
          description: Lista de menús
    post:
      tags:
        - Menús
      summary: Crear un nuevo menú
      description: Permite crear un nuevo ítem de menú
      operationId: createMenu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                route:
                  type: string
                icon:
                  type: string
                menuGroup:
                  type: string
                order:
                  type: integer
                isActive:
                  type: boolean
      responses:
        '201':
          description: Menú creado correctamente

  /api/menus/{id}:
    put:
      tags:
        - Menús
      summary: Actualizar un menú existente
      operationId: updateMenu
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Menú actualizado correctamente
    delete:
      tags:
        - Menús
      summary: Eliminar un menú
      operationId: deleteMenu
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Menú eliminado correctamente

  /api/menu-groups:
    get:
      tags:
        - Menús
      summary: Obtener todos los grupos de menú
      operationId: getMenuGroups
      responses:
        '200':
          description: Lista de grupos de menú
    post:
      tags:
        - Menús
      summary: Crear un nuevo grupo de menú
      operationId: createMenuGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                name:
                  type: string
                description:
                  type: string
                isActive:
                  type: boolean
      responses:
        '201':
          description: Grupo de menú creado correctamente

  /api/menu-groups/{id}:
    put:
      tags:
        - Menús
      summary: Actualizar un grupo de menú
      operationId: updateMenuGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Grupo de menú actualizado correctamente
    delete:
      tags:
        - Menús
      summary: Eliminar un grupo de menú
      operationId: deleteMenuGroup
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Grupo de menú eliminado correctamente

  /api/genders:
    get:
      tags:
        - Gestiones del usuario
      summary: Obtener todos los géneros
      operationId: getAllGenders
      responses:
        '200':
          description: Lista de géneros disponibles
    post:
      tags:
        - Gestiones del usuario
      summary: Crear nuevo género ( admin )
      operationId: createGender
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                code:
                  type: string
      responses:
        '201':
          description: Género creado correctamente

  /api/genders/{id}:
    get:
      tags:
        - Gestiones del usuario
      summary: Obtener género por ID ( admin )
      operationId: getGenderById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Género obtenido correctamente
    put:
      tags:
        - Gestiones del usuario
      summary: Actualizar género ( admin )
      operationId: updateGender
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Género actualizado correctamente
    delete:
      tags:
        - Gestiones del usuario
      summary: Eliminar género ( admin )
      operationId: deleteGender
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Género eliminado correctamente

  /api/addresses/countries:
    get:
      tags:
        - Gestiones del usuario
      summary: Obtener países
      operationId: fetchCountries
      responses:
        '200':
          description: Lista de países

  /api/addresses/states/{countryCode}:
    get:
      tags:
        - Gestiones del usuario
      summary: Obtener estados por país
      operationId: fetchStates
      parameters:
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de estados

  /api/addresses/cities/{stateCode}:
    get:
      tags:
        - Gestiones del usuario
      summary: Obtener ciudades por estado
      operationId: fetchCities
      parameters:
        - name: stateCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lista de ciudades

  /api/saved-searches:
    post:
      tags:
        - Notificaciones
      summary: Guardar búsqueda
      description: Guarda una búsqueda del usuario y opcionalmente configura notificación por email
      operationId: saveSearch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                name:
                  type: string
                filters:
                  type: object
                notifyByEmail:
                  type: boolean
      responses:
        '200':
          description: Búsqueda guardada correctamente











components:


  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
      
      
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID del usuario
          example: "664da7f8b10d8f9d9f5d1234"
        role:
          type: string
          enum: [user, admin]
          description: Rol del usuario
          example: "user"
        username:
          type: string
          description: Nombre de usuario
          example: "john_doe"
        email:
          type: string
          format: email
          description: Correo electrónico
          example: "john.doe@example.com"
        firstName:
          type: string
          description: Primer nombre del usuario
          example: "John"
        lastName:
          type: string
          description: Apellido del usuario
          example: "Doe"
        dateOfBirth:
          type: string
          format: date
          description: Fecha de nacimiento
          example: "1990-05-20"
        gender:
          type: string
          description: ID del género (referencia)
          example: "664da8e9b10d8f9d9f5d5678"
        phone:
          type: string
          description: Número de teléfono
          example: "+34123456789"
        location:
          type: string
          description: Ubicación geográfica
          example: "Madrid, España"
        avatarUrl:
          type: string
          description: URL del avatar del usuario
          example: "https://res.cloudinary.com/app/avatar123.jpg"
        bio:
          type: string
          description: Biografía breve del usuario
          example: "Coleccionista apasionado de figuras de acción."
        emailVerified:
          type: boolean
          description: Indica si el correo ha sido verificado
          example: true
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la cuenta
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
        direccionId:
          type: string
          description: ID de la dirección asociada (referencia a Address)
          example: "664da9f3b10d8f9d9f5d9999"

    Advert:
      type: object
      properties:
        _id:
          type: string
          description: ID del anuncio
          example: "664daf15b10d8f9d9f5de123"
        title:
          type: string
          description: Título del anuncio
          example: "Figura coleccionable de Goku"
        slug:
          type: string
          description: Slug SEO generado automáticamente
          example: "figura-coleccionable-de-goku"
        description:
          type: string
          description: Descripción detallada del anuncio
          example: "Edición limitada en perfecto estado, sin caja original."
        mainImage:
          type: string
          description: URL de la imagen principal del anuncio
          example: "https://res.cloudinary.com/app/advert123.jpg"
        price:
          type: number
          format: double
          description: Precio del artículo
          example: 59.99
        transaction:
          type: string
          description: ID del tipo de transacción (compra/venta)
          example: "664dab00b10d8f9d9f5dc123"
        status:
          type: string
          description: ID del estado del anuncio (disponible/reservado/vendido)
          example: "664dab10b10d8f9d9f5dc456"
        isVisible:
          type: boolean
          description: Visibilidad del anuncio
          example: true
        product_type:
          type: string
          description: ID del tipo de producto
          example: "664dab20b10d8f9d9f5dc789"
        universe:
          type: string
          description: ID del universo al que pertenece el producto
          example: "664dab30b10d8f9d9f5dca12"
        condition:
          type: string
          description: ID del estado del producto
          example: "664dab40b10d8f9d9f5dca89"
        collectionref:
          type: string
          description: Referencia opcional a una colección
          example: "dragonballZ2021"
        brand:
          type: string
          description: ID de la marca asociada
          example: "664dab50b10d8f9d9f5dcb34"
        tags:
          type: array
          description: Lista de etiquetas para el anuncio
          items:
            type: string
          example: ["figura", "goku", "edición limitada"]
        images:
          type: array
          description: URLs adicionales de imágenes del anuncio
          items:
            type: string
          example:
            - "https://res.cloudinary.com/app/img1.jpg"
            - "https://res.cloudinary.com/app/img2.jpg"
        user:
          type: string
          description: ID del usuario propietario del anuncio
          example: "664daa00b10d8f9d9f5db987"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del anuncio
        updatedAt:
          type: string
          format: date-time
          description: Fecha de la última modificación

    Universe:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        slug:
          type: string
        order:
          type: integer

    Brand:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logoUrl:
          type: string
        slug:
          type: string
        order:
          type: integer

    Collectionref:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        order:
          type: integer

    Condition:
      type: object
      properties:
        id:
          type: string
        value:
          type: string

    Transaction:
      type: object
      properties:
        id:
          type: string
        transaction:
          type: string
        description:
          type: string
        slug:
          type: string

    Status:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        label:
          type: string
        context:
          type: string
        order:
          type: integer
        active:
          type: boolean

    ProductType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        order:
          type: integer

    Chat:
      type: object
      properties:
        _id:
          type: string
          description: ID del chat
          example: "664dcf15b10d8f9d9f5de456"
        advertId:
          type: string
          description: ID del anuncio relacionado con el chat
          example: "664daf15b10d8f9d9f5de123"
        roomId:
          type: string
          description: ID único de la sala de chat (room)
          example: "chat_abc123"
        users:
          type: array
          description: Lista de IDs de usuarios que participan en el chat
          items:
            type: string
          example: ["664daa00b10d8f9d9f5db987", "664daa00b10d8f9d9f5db654"]
        messages:
          type: array
          description: Lista de mensajes enviados en el chat
          items:
            type: object
            properties:
              sender:
                type: object
                description: Información del remitente
                properties:
                  userId:
                    type: string
                    example: "664daa00b10d8f9d9f5db987"
                  username:
                    type: string
                    example: "john_doe"
                  avatar:
                    type: string
                    example: "https://res.cloudinary.com/app/avatar.jpg"
              content:
                type: string
                description: Contenido del mensaje
                example: "Hola, ¿sigue disponible?"
              createdAt:
                type: string
                format: date-time
                description: Fecha de envío del mensaje
              receiver:
                type: string
                description: ID del usuario que recibió el mensaje
                example: "664daa00b10d8f9d9f5db654"
              isRead:
                type: boolean
                description: Indica si el mensaje fue leído
                example: false
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del chat


    Notification:
      type: object
      properties:
        _id:
          type: string
          example: "664db123c6b27ab69b45e9d1"
        user:
          type: string
          description: ID del usuario receptor
        notificationType:
          type: object
          description: Tipo de notificación
          properties:
            label:
              type: string
              example: "Cambio de precio"
            icon:
              type: string
              example: "icon-price"
        advertId:
          type: object
          description: Información básica del anuncio relacionado
          properties:
            slug:
              type: string
              example: "figura-ironman-edicion-limitada"
        message:
          type: string
          description: Mensaje de la notificación
          example: "El anuncio Figura Ironman ahora cuesta 45.00€."
        isRead:
          type: boolean
          description: Indica si la notificación fue leída
          example: false
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2025-05-03T14:32:00.000Z"
          

    NotificationType:
      type: object
      properties:
        _id:
          type: string
          example: "664db456c6b27ab69b45ea12"
        code:
          type: string
          description: Código único del tipo de notificación
          example: "price"
        label:
          type: string
          description: Nombre legible del tipo de notificación
          example: "Cambio de precio"
        icon:
          type: string
          description: Icono asociado al tipo de notificación
          example: "icon-price"
        template:
          type: string
          description: Plantilla del mensaje de notificación
          example: "El anuncio {title} ahora cuesta {price}€."
        order:
          type: integer
          description: Orden de prioridad o aparición
          example: 1
        active:
          type: boolean
          description: Indica si el tipo de notificación está activo
          example: true



    Order:
      type: object
      properties:
        buyerId:
          type: string
          description: ID del comprador
        sellerId:
          type: string
          description: ID del vendedor
        advertId:
          type: string
          description: ID del anuncio relacionado
        price:
          type: number
          format: double
          description: Precio del pedido
        commission:
          type: number
          format: double
          description: Comisión asociada al pedido
        paymentStatus:
          type: string
          enum: ['pending', 'paid', 'shipped', 'delivered', 'cancelled']
          description: Estado del pago
        paymentID:
          type: string
          description: ID del pago asociado
        shippingMethod:
          type: string
          description: Método de envío
        shippingAddress:
          type: string
          description: Dirección de envío
        trackingCode:
          type: string
          description: Código de seguimiento
        notes:
          type: string
          description: Notas adicionales
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del pedido
        updatedAt:
          type: string
          format: date-time
          description: Fecha de la última actualización del pedido

    Payment:
      type: object
      properties:
        orderId:
          type: string
          description: ID del pedido asociado
        userId:
          type: string
          description: ID del usuario que realizó el pago
        providersId:
          type: string
          description: ID del proveedor de pago
        transactionId:
          type: string
          description: ID de la transacción
        statusId:
          type: string
          enum: ['pending', 'succeeded', 'failed', 'refunded']
          description: Estado del pago
        paymentMethodID:
          type: string
          description: ID del método de pago
        amount:
          type: number
          format: double
          description: Monto del pago
        currency:
          type: string
          description: Moneda del pago
        paidAt:
          type: string
          format: date-time
          description: Fecha en que se realizó el pago
        receiptUrl:
          type: string
          description: URL del recibo de pago
        rawResponse:
          type: object
          description: Respuesta cruda del pago
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del pago

    PaymentMethod:
      type: object
      properties:
        code:
          type: string
          description: Código del método de pago
        label:
          type: string
          description: Etiqueta del método de pago
        order:
          type: integer
          description: Orden de aparición del método de pago
        active:
          type: boolean
          description: Indica si el método de pago está activo

    Provider:
      type: object
      properties:
        code:
          type: string
          description: Código del proveedor
        label:
          type: string
          description: Nombre del proveedor
        order:
          type: integer
          description: Orden de aparición del proveedor
        active:
          type: boolean
          description: Indica si el proveedor está activo

    Shipment:
      type: object
      properties:
        id:
          type: string
          description: ID del envío
        orderId:
          type: string
          description: ID de la orden asociada al envío
        shippingProviderId:
          type: string
          description: ID del proveedor de envío
        trackingCode:
          type: string
          description: Código de seguimiento del envío
        currentStatus:
          type: string
          description: Estado actual del envío (en tránsito, entregado, pendiente, cancelado)
        estimatedDate:
          type: string
          format: date
          description: Fecha estimada de entrega
        deliveredAt:
          type: string
          format: date-time
          description: Fecha en que se entregó el envío
        history:
          type: array
          description: Historial de actualizaciones del envío
          items:
            type: object
            properties:
              status:
                type: string
              date:
                type: string
                format: date-time
              details:
                type: string
        trackingUrl:
          type: string
          description: URL para seguir el envío
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización

    ShippingMethod:
      type: object
      properties:
        id:
          type: string
          description: ID del método de envío
        code:
          type: string
          description: Código único del método de envío
        label:
          type: string
          description: Nombre legible del método
        order:
          type: integer
          description: Orden para el listado
        active:
          type: boolean
          description: Indica si el método está activo



    ShippingProvider:
      type: object
      properties:
        id:
          type: string
          description: ID del proveedor de envío
        code:
          type: string
          description: Código del proveedor
        label:
          type: string
          description: Nombre del proveedor
        trackingUrl:
          type: string
          description: URL base del tracking (puede contener `{code}`)
        apiIntegration:
          type: boolean
          description: Si tiene integración con API externa
        active:
          type: boolean
          description: Indica si el proveedor está activo
